"use client"

import { useState } from "react";

interface RefreshProps {
  refresh: () => void // Function to run when button is clicked, passed from parent
}

export default function RefreshButton({ refresh }: RefreshProps) {
  const [isClicked, setIsClicked] = useState<boolean>();
  
  const handleRefresh = () => {
    setIsClicked(!isClicked);
    refresh();
  }

  return (
    <button onClick={handleRefresh} className="refreshButton">
      <svg 
        width="21" 
        height="20"
        viewBox="0 0 21 20"
        xmlns="http://www.w3.org/2000/svg"
        onAnimationEnd={() => setIsClicked(!isClicked)}
        className={`refreshIcon ${isClicked ? "refreshAnimation" : ""}`}
      >
        <path d="M18.33 4.69401L18.75 3.31701C18.7884 3.1914 18.8512 3.07459 18.9347 2.97324C19.0183 2.87189 19.121 2.78799 19.237 2.72633C19.3529 2.66468 19.4799 2.62647 19.6107 2.61389C19.7414 2.6013 19.8734 2.6146 19.999 2.65301C20.1246 2.69142 20.2414 2.7542 20.3427 2.83775C20.4441 2.92131 20.528 3.02401 20.5897 3.13999C20.6513 3.25597 20.6895 3.38296 20.7021 3.51371C20.7147 3.64446 20.7014 3.7764 20.663 3.90201L19.493 7.72701C19.4154 7.9805 19.2404 8.19283 19.0064 8.31733C18.7724 8.44184 18.4985 8.46834 18.245 8.39101L14.42 7.22101C14.2917 7.18492 14.172 7.12356 14.0678 7.04055C13.9636 6.95754 13.8771 6.85455 13.8132 6.73762C13.7494 6.6207 13.7096 6.49219 13.6961 6.35966C13.6826 6.22713 13.6957 6.09323 13.7347 5.96584C13.7737 5.83846 13.8377 5.72014 13.923 5.61784C14.0084 5.51554 14.1133 5.43133 14.2316 5.37014C14.35 5.30895 14.4793 5.27202 14.6121 5.26153C14.7449 5.25103 14.8785 5.26717 15.005 5.30901L16.677 5.82001C15.9378 4.69891 14.9068 3.80069 13.695 3.22209C12.4832 2.6435 11.1366 2.40645 9.80003 2.53649C8.4635 2.66652 7.18777 3.1587 6.11023 3.96003C5.03268 4.76135 4.19416 5.84145 3.68498 7.08401L3.42498 7.71701C3.37769 7.84197 3.30584 7.95618 3.21368 8.0529C3.12152 8.14963 3.01091 8.2269 2.88839 8.28017C2.76586 8.33343 2.63391 8.36161 2.50031 8.36302C2.36672 8.36444 2.23419 8.33907 2.11056 8.28842C1.98694 8.23777 1.87471 8.16285 1.78052 8.06811C1.68633 7.97336 1.61208 7.86069 1.56215 7.73677C1.51222 7.61285 1.48764 7.48018 1.48984 7.34659C1.49204 7.21301 1.52099 7.08122 1.57498 6.95901L1.83498 6.32601C2.48121 4.74929 3.5447 3.37836 4.91125 2.36043C6.27781 1.3425 7.89583 0.716014 9.59156 0.54824C11.2873 0.380465 12.9967 0.67774 14.5362 1.40814C16.0758 2.13855 17.3873 3.27449 18.33 4.69401V4.69401ZM2.80798 15.307L2.48098 16.618C2.45172 16.748 2.39677 16.8709 2.31935 16.9794C2.24193 17.0878 2.14362 17.1798 2.03017 17.2497C1.91673 17.3196 1.79045 17.3662 1.65876 17.3866C1.52706 17.4071 1.39261 17.401 1.26331 17.3687C1.134 17.3365 1.01245 17.2787 0.905787 17.1988C0.799129 17.1189 0.70952 17.0185 0.642224 16.9034C0.574929 16.7884 0.531306 16.6611 0.513919 16.5289C0.496531 16.3968 0.50573 16.2625 0.540975 16.134L1.50798 12.254C1.5406 12.1219 1.59984 11.9978 1.68208 11.8894C1.76431 11.781 1.86781 11.6905 1.98623 11.6235C2.10465 11.5565 2.23551 11.5143 2.37079 11.4996C2.50607 11.4849 2.64292 11.498 2.77298 11.538L6.60098 12.492C6.85837 12.5562 7.07972 12.72 7.21634 12.9474C7.35296 13.1748 7.39366 13.4471 7.32948 13.7045C7.26529 13.9619 7.10149 14.1833 6.8741 14.3199C6.64671 14.4565 6.37437 14.4972 6.11698 14.433L4.33098 13.988C5.09449 15.1569 6.17373 16.0853 7.44352 16.6656C8.7133 17.246 10.1216 17.4544 11.5051 17.2668C12.8885 17.0793 14.1904 16.5033 15.2598 15.6058C16.3292 14.7083 17.1223 13.526 17.547 12.196C17.6276 11.9433 17.8053 11.7329 18.0411 11.6112C18.1578 11.5509 18.2852 11.5142 18.4161 11.5032C18.547 11.4922 18.6788 11.5071 18.804 11.547C18.9291 11.5869 19.0452 11.6511 19.1455 11.7359C19.2459 11.8207 19.3285 11.9244 19.3888 12.0411C19.4491 12.1578 19.4858 12.2853 19.4968 12.4162C19.5078 12.5471 19.4929 12.6789 19.453 12.804C19.0367 14.11 18.3392 15.3088 17.4097 16.3163C16.4802 17.3237 15.3413 18.1152 14.073 18.635C12.0968 19.4446 9.90361 19.5561 7.85553 18.951C5.80745 18.3459 4.02694 17.0605 2.80798 15.307V15.307Z" />
      </svg>
    </button>
  )
}